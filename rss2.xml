<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="css/rss.css" ?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>一江波,波又波</title>
    <link>http://jarbob.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <script xmlns="http://www.w3.org/1999/xhtml" src="./js/rss.js"></script>
    
    <description>发呆意淫，代码发烧，冥想笔记</description>
    <pubDate>Wed, 24 Aug 2016 08:04:10 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>利用python爬取CNZZ域名来源数据</title>
      <link>http://jarbob.com/2016/08/18/%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96CNZZ%E5%9F%9F%E5%90%8D%E6%9D%A5%E6%BA%90%E6%95%B0%E6%8D%AE/</link>
      <guid>http://jarbob.com/2016/08/18/%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96CNZZ%E5%9F%9F%E5%90%8D%E6%9D%A5%E6%BA%90%E6%95%B0%E6%8D%AE/</guid>
      <pubDate>Thu, 18 Aug 2016 05:56:59 GMT</pubDate>
      <description>
      
        &lt;p&gt;很早就想玩玩python,没想到真正玩py是现在,不过编程这东西,语法是最基础的,最重要的是要有思想。&lt;br&gt;说到蜘蛛,本人以前只是用c#等语言玩玩,现在尝试用py实现,发现比以前简单了不知道多少,尤其是cookie的处理,简直简单到爆。当然,主要的原因还是许多大牛开发各种棒棒的库。 &lt;/p&gt;
&lt;h2 id=&quot;代码测试效果&quot;&gt;&lt;a href=&quot;#代码测试效果&quot; class=&quot;headerlink&quot; title=&quot;代码测试效果&quot;&gt;&lt;/a&gt;代码测试效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/cnzz_catch.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;好了不扯了,代码开始。利用了cnzz的快捷查询页面,这样登录也是最简单的。贴代码:  &lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;p&gt;很早就想玩玩python,没想到真正玩py是现在,不过编程这东西,语法是最基础的,最重要的是要有思想。&lt;br&gt;说到蜘蛛,本人以前只是用c#等语言玩玩,现在尝试用py实现,发现比以前简单了不知道多少,尤其是cookie的处理,简直简单到爆。当然,主要的原因还是许多大牛开发各种棒棒的库。 &lt;/p&gt;
&lt;h2 id=&quot;代码测试效果&quot;&gt;&lt;a href=&quot;#代码测试效果&quot; class=&quot;headerlink&quot; title=&quot;代码测试效果&quot;&gt;&lt;/a&gt;代码测试效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/cnzz_catch.png&quot; alt=&quot;img&quot;&gt;&lt;br&gt;好了不扯了,代码开始。利用了cnzz的快捷查询页面,这样登录也是最简单的。贴代码:  &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# get json done&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# may be the important js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# https://web.umeng.com/static/js/traf/referrals.js?t=201603181110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&quot;&quot;&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urllib&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; urllib2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cookielib&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# import pprint&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 登录的主页面&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CnzzCatch&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    is_login = &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__set_cookie&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;add cookie listener&quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cj = cookielib.LWPCookieJar()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cookie_support = urllib2.HTTPCookieProcessor(cj)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        opener = urllib2.build_opener(cookie_support, urllib2.HTTPHandler)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        urllib2.install_opener(opener)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, site_id)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;construct of logining to cnzz&quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.site_id = site_id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.__host_url = &lt;span class=&quot;string&quot;&gt;&#39;http://new.cnzz.com/v1/login.php?siteid=&#39;&lt;/span&gt; + self.site_id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.__post_url = &lt;span class=&quot;string&quot;&gt;&#39;http://new.cnzz.com/v1/login.php?t=login&amp;amp;siteid=&#39;&lt;/span&gt; + self.site_id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.password = &lt;span class=&quot;string&quot;&gt;&#39;***&#39;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#your password here&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.__set_cookie()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.__login()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__login&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;login &amp;amp; catch&quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; urllib2.urlopen(self.__host_url):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Open host success!&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# headers&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        headers = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:14.0) Gecko/20100101 Firefox/14.0.1&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Referer&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;http://new.cnzz.com/v1/login.php?siteid=&#39;&lt;/span&gt; + self.site_id,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Accept&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Accept-Language&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;en-US,en;q=0.7,zh;q=0.3&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Accept-Encoding&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;zip, deflate&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Connection&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;keep-alive&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/x-www-form-urlencoded&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &lt;span class=&quot;string&quot;&gt;&#39;Content-Length&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;15&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 构造Post数据。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        post_data = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;password&#39;&lt;/span&gt;: self.password&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 需要给Post数据编码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        post_data = urllib.urlencode(post_data)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 通过urllib2提供的request方法来向指定Url发送我们构造的数据，并完成登录过程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        request = urllib2.Request(self.__post_url, post_data, headers)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        response = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response = urllib2.urlopen(request)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; urllib2.URLError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; hasattr(e, &lt;span class=&quot;string&quot;&gt;&#39;code&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;LOGIN ERROR CODE&#39;&lt;/span&gt;, e.code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; hasattr(e, &lt;span class=&quot;string&quot;&gt;&#39;reason&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;LOGIN ERROR REASON&#39;&lt;/span&gt;, e.reason&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; response:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Login finish!&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                self.is_login = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_data&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, current_page, page_num, start_date, end_date=time.strftime&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%Y-%m-%d&quot;&lt;/span&gt;, time.localtime&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;)&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;get summary json data&quot;&quot;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Getting data...&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.is_login:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            data_url = &lt;span class=&quot;string&quot;&gt;&#39;https://web.umeng.com/main.php?c=traf&amp;amp;a=domain&amp;amp;ajax=module=summary|module=inputList|module=innerList|module=refererDomainList_orderBy=pv_orderType=-1_currentPage=%d_pageType=%d&amp;amp;siteid=%s&amp;amp;st=%s&amp;amp;et=%s&amp;amp;domainCondType=&amp;amp;itemName=&amp;amp;itemNameType=&amp;amp;itemVal=&amp;amp;siteType=&#39;&lt;/span&gt; % (current_page, page_num, self.site_id, start_date, end_date)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                response = urllib2.urlopen(data_url)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; urllib2.URLError &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; e:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; hasattr(e, &lt;span class=&quot;string&quot;&gt;&#39;code&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GETDATA ERROR CODE&#39;&lt;/span&gt;, e.code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; hasattr(e, &lt;span class=&quot;string&quot;&gt;&#39;reason&#39;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GETDATA ERROR REASON&#39;&lt;/span&gt;, e.reason&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; response:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; response.read()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 实例化测试&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x = CnzzCatch(&lt;span class=&quot;string&quot;&gt;&#39;6666666666&#39;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;#your website_id  here&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;s = x.get_data(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;2016-07-19&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; s&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content:encoded>
      
      <comments>http://jarbob.com/2016/08/18/%E5%88%A9%E7%94%A8python%E7%88%AC%E5%8F%96CNZZ%E5%9F%9F%E5%90%8D%E6%9D%A5%E6%BA%90%E6%95%B0%E6%8D%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Macbook外置SSD安装linux+win10双系统</title>
      <link>http://jarbob.com/2016/07/24/Macbook%E5%A4%96%E7%BD%AESSD%E5%AE%89%E8%A3%85linux-win10%E5%8F%8C%E7%B3%BB%E7%BB%9F/</link>
      <guid>http://jarbob.com/2016/07/24/Macbook%E5%A4%96%E7%BD%AESSD%E5%AE%89%E8%A3%85linux-win10%E5%8F%8C%E7%B3%BB%E7%BB%9F/</guid>
      <pubDate>Sun, 24 Jul 2016 08:24:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;作为Mac OS的重度使用者,本不想教大家装外置双系统,可是呢,本人天生爱折腾,于是新买的macbook便很快成了小白鼠。当然,说到这个本人的方法不一定是最理想的,这里大家可以作为参考。&lt;br&gt;  不多说了,先来看看效果:&lt;br&gt;  &lt;img src=&quot;/images/IMG_0908.JPG&quot; alt=&quot;img&quot;&gt;&lt;br&gt;
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;作为Mac OS的重度使用者,本不想教大家装外置双系统,可是呢,本人天生爱折腾,于是新买的macbook便很快成了小白鼠。当然,说到这个本人的方法不一定是最理想的,这里大家可以作为参考。&lt;br&gt;  不多说了,先来看看效果:&lt;br&gt;  &lt;img src=&quot;/images/IMG_0908.JPG&quot; alt=&quot;img&quot;&gt;&lt;br&gt;  &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;  &lt;img src=&quot;/images/IMG_0909.JPG&quot; alt=&quot;img&quot;&gt;&lt;br&gt;  &lt;img src=&quot;/images/IMG_0910.JPG&quot; alt=&quot;img&quot;&gt;&lt;br&gt;  &lt;img src=&quot;/images/IMG_0911.JPG&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;好吧接下来,适合人群:  &lt;/p&gt;
&lt;h2 id=&quot;适合人群&quot;&gt;&lt;a href=&quot;#适合人群&quot; class=&quot;headerlink&quot; title=&quot;适合人群&quot;&gt;&lt;/a&gt;适合人群&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;有闲置的硬盘,并且像我一样喜欢折腾  &lt;/li&gt;
&lt;li&gt;工作中用到其他系统, 但手里抱的mac  &lt;/li&gt;
&lt;li&gt;自身mac的硬盘不够大,想通过外置硬盘的方法安装其他系统  &lt;/li&gt;
&lt;li&gt;本教程适合有一定系统安装经验的用户,一些网上有的方法,这里不做详说  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;有好使的PE系统优盘,最起码也得支持UEFI吧  &lt;/li&gt;
&lt;li&gt;各种系统的镜像文件  &lt;/li&gt;
&lt;li&gt;一块移动硬盘或者固态硬盘(本人使用的是三星850+硬盘外壳)  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;移动硬盘分区以及windows的安装&quot;&gt;&lt;a href=&quot;#移动硬盘分区以及windows的安装&quot; class=&quot;headerlink&quot; title=&quot;移动硬盘分区以及windows的安装&quot;&gt;&lt;/a&gt;移动硬盘分区以及windows的安装&lt;/h2&gt;&lt;p&gt;这个工作本人是在pe系统底下完成的&lt;br&gt;首先用diskgenius或者类似软件软件将硬盘分区表转换成GUID模式,然后将硬盘分出大约100MB空间的ESP分区。&lt;br&gt;以上工作完成之后,接下来分配windows的分区大小,本人分出的大小是50GB,大家可以根据自己的情况来分。&lt;br&gt;然后在分出的分区中还原windows镜像,完成之后手动添加引导。这里我使用的是比较傻瓜的软件,当然也可以使用命令行。&lt;br&gt;在添加引导之后,你就可以看到在刚才分出的ESP分区中,多出了一个EFI文件夹,打开之后是boot和Microsoft文件夹。到此windows轻松安装成功&lt;/p&gt;
&lt;h2 id=&quot;Linux系统的安装&quot;&gt;&lt;a href=&quot;#Linux系统的安装&quot; class=&quot;headerlink&quot; title=&quot;Linux系统的安装&quot;&gt;&lt;/a&gt;Linux系统的安装&lt;/h2&gt;&lt;p&gt;Linux的安装类似于以上win的安装,大致过程是:划分合适大小的分区,制作linux镜像U盘,安装镜像到分区。&lt;br&gt;不过,安装Linux 记得在选安装启动设备的位置时,选择/dev/sda1(这个1别漏了),这样ubuntu在安装完成之后会自动在ESP分区追加自己的引导。&lt;br&gt;当linux安装完成后,ESP分区中将会多出一个ubuntu文件夹,如果没有,那说明是不对的。&lt;/p&gt;
&lt;h2 id=&quot;利用reFind优雅的展示系统选择&quot;&gt;&lt;a href=&quot;#利用reFind优雅的展示系统选择&quot; class=&quot;headerlink&quot; title=&quot;利用reFind优雅的展示系统选择&quot;&gt;&lt;/a&gt;利用reFind优雅的展示系统选择&lt;/h2&gt;&lt;p&gt;先贴&lt;a href=&quot;http://www.rodsbooks.com/refind/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方链接&lt;/a&gt;出来吧,然后你就可以愉快地下载了,下载完成,将refind文件夹复制到你的ESP分区的EFI文件夹。&lt;br&gt;所以复制之后,你的ESP分区将存在4个文件夹-boot,Microsoft,ubuntu,refind.&lt;br&gt;这里我用的比较偷懒的方法,就是将Microsoft文件夹改成win10,然一个后新建Microsoft文件夹,进入该文件夹新建Boot文件夹,然后将refind文件夹中的文件全部拷贝进去,然后将refind_x64.efi改成bootmgfw.efi。看懂了吧,就是狸猫换太子。&lt;br&gt;到此,已经快成功了。将Microsoft文件夹下的boot文件夹中的refind.conf-sample改成refind.conf。并用编辑器打开(本人使用的notepad++),进行配置。好吧,我又开始偷懒了,配置文件放&lt;a href=&quot;https://github.com/jarbob/reFind.conf-jarbob.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gayhub&lt;/a&gt;吧,大家可以参考一下,不想研究就直接用好了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;经过以上的简单操作,外置硬盘多系统的安装就完成了。将硬盘插入mac,重启,注意不用按着option键,就可以看到多个系统的选择界面了。本人亲测有效,时间有限,文章比较粗糙,有什么问题欢迎留言交流。&lt;/p&gt;
</content:encoded>
      
      <comments>http://jarbob.com/2016/07/24/Macbook%E5%A4%96%E7%BD%AESSD%E5%AE%89%E8%A3%85linux-win10%E5%8F%8C%E7%B3%BB%E7%BB%9F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>给hexo博客下用hexo-generator-feed配置的rss添加样式</title>
      <link>http://jarbob.com/2016/07/15/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E4%B8%8B%E7%94%A8hexo-generator-feed%E9%85%8D%E7%BD%AE%E7%9A%84%E7%9A%84rss%E7%A9%BF%E4%B8%8A%E5%A4%96%E8%A1%A3/</link>
      <guid>http://jarbob.com/2016/07/15/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E4%B8%8B%E7%94%A8hexo-generator-feed%E9%85%8D%E7%BD%AE%E7%9A%84%E7%9A%84rss%E7%A9%BF%E4%B8%8A%E5%A4%96%E8%A1%A3/</guid>
      <pubDate>Fri, 15 Jul 2016 11:49:24 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;chrome访问rss,会提醒:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This XML file does not appear to have any style information associated with it. The document tree is shown below.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本文主要解决rss没有样式的问题。&lt;/p&gt;
&lt;h2 id=&quot;添加hexo-generator-feed插件&quot;&gt;&lt;a href=&quot;#添加hexo-generator-feed插件&quot; class=&quot;headerlink&quot; title=&quot;添加hexo-generator-feed插件&quot;&gt;&lt;/a&gt;添加hexo-generator-feed插件&lt;/h2&gt;&lt;p&gt;这里不详细说了,提一下注意事项:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm feed插件的时候记得加上 –save&lt;/li&gt;
&lt;li&gt;根目录下的配置文件长这样:&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;chrome访问rss,会提醒:  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This XML file does not appear to have any style information associated with it. The document tree is shown below.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本文主要解决rss没有样式的问题。&lt;/p&gt;
&lt;h2 id=&quot;添加hexo-generator-feed插件&quot;&gt;&lt;a href=&quot;#添加hexo-generator-feed插件&quot; class=&quot;headerlink&quot; title=&quot;添加hexo-generator-feed插件&quot;&gt;&lt;/a&gt;添加hexo-generator-feed插件&lt;/h2&gt;&lt;p&gt;这里不详细说了,提一下注意事项:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm feed插件的时候记得加上 –save&lt;/li&gt;
&lt;li&gt;根目录下的配置文件长这样:&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;pre&gt;&lt;code&gt;plugin:
- hexo-generator-feed

#Feed Atom
feed:
    type: rss2  #或者atom
    path: rss2.xml #跟上面一致atom.xml
    limit: 20    #rss条目数最大值
    hub:   #这个可以不填
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;配置完成,直接&lt;code&gt;hexo g&lt;/code&gt;,会在public文件夹下生成xml文件  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;问题来了&quot;&gt;&lt;a href=&quot;#问题来了&quot; class=&quot;headerlink&quot; title=&quot;问题来了&quot;&gt;&lt;/a&gt;问题来了&lt;/h2&gt;&lt;p&gt;当你打开自己网站,点击rss订阅有木有发现,会提示没有样式文件,然后列出了tree&lt;br&gt;所以重点了,本文叫你怎么添加样式文件,甚至在&lt;code&gt;deploy -g&lt;/code&gt;的时候也是全自动生成的  &lt;/p&gt;
&lt;h2 id=&quot;解决问题&quot;&gt;&lt;a href=&quot;#解决问题&quot; class=&quot;headerlink&quot; title=&quot;解决问题&quot;&gt;&lt;/a&gt;解决问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;博客根目录/node_modules/hexo-generator-feed/&lt;/code&gt; 文件夹下添加css/rss.css  &lt;/li&gt;
&lt;li&gt;修改&lt;code&gt;博客根目录/node_modules/hexo-generator-feed/lib/generator.js&lt;/code&gt;的代码  &lt;/li&gt;
&lt;li&gt;我会在下面提供要修改的代码的资源链接&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;资源链接&quot;&gt;&lt;a href=&quot;#资源链接&quot; class=&quot;headerlink&quot; title=&quot;资源链接&quot;&gt;&lt;/a&gt;资源链接&lt;/h2&gt;&lt;p&gt;是的,还是&lt;a href=&quot;https://github.com/jarbob/hexo-generator-feed-rebulid&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gayhub&lt;/a&gt;&lt;br&gt;自己修改了,如果出错才改回去,不建议直接覆盖^_^  &lt;/p&gt;
</content:encoded>
      
      <comments>http://jarbob.com/2016/07/15/%E7%BB%99hexo%E5%8D%9A%E5%AE%A2%E4%B8%8B%E7%94%A8hexo-generator-feed%E9%85%8D%E7%BD%AE%E7%9A%84%E7%9A%84rss%E7%A9%BF%E4%B8%8A%E5%A4%96%E8%A1%A3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PHP mysql PDO 和mysql类的封装</title>
      <link>http://jarbob.com/2016/07/15/PHP-mysql-PDO-%E5%92%8Cmysql%E7%B1%BB%E7%9A%84%E5%B0%81%E8%A3%85/</link>
      <guid>http://jarbob.com/2016/07/15/PHP-mysql-PDO-%E5%92%8Cmysql%E7%B1%BB%E7%9A%84%E5%B0%81%E8%A3%85/</guid>
      <pubDate>Fri, 15 Jul 2016 03:57:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;什么是pdo?&lt;br&gt;PDO一是PHP数据对象（PHP Data Object）的缩写,是PHP5以后的一种mysql数据驱动对象。&lt;br&gt;现在大多数php框架都包含了对他的支持。&lt;/li&gt;
&lt;li&gt;为什么要自己封装?&lt;br&gt;个人觉得只有自己写的东西,才是最清楚的。当然不否定使用现成的框架,或者再其基础上加以改造   &lt;/li&gt;
&lt;li&gt;&lt;p&gt;这篇博文主要展示在统一接口下轻松实现两种数据驱动类的切换。&lt;/p&gt;
&lt;h2 id=&quot;公共接口-i-DAo-interface-php&quot;&gt;&lt;a href=&quot;#公共接口-i-DAo-interface-php&quot; class=&quot;headerlink&quot; title=&quot;公共接口 i_DAo.interface.php&quot;&gt;&lt;/a&gt;公共接口 i_DAo.interface.php&lt;/h2&gt;&lt;p&gt;限制两个数据对象应该具有相同的方法。代码如下:&lt;/p&gt;
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;什么是pdo?&lt;br&gt;PDO一是PHP数据对象（PHP Data Object）的缩写,是PHP5以后的一种mysql数据驱动对象。&lt;br&gt;现在大多数php框架都包含了对他的支持。&lt;/li&gt;
&lt;li&gt;为什么要自己封装?&lt;br&gt;个人觉得只有自己写的东西,才是最清楚的。当然不否定使用现成的框架,或者再其基础上加以改造   &lt;/li&gt;
&lt;li&gt;&lt;p&gt;这篇博文主要展示在统一接口下轻松实现两种数据驱动类的切换。&lt;/p&gt;
&lt;h2 id=&quot;公共接口-i-DAo-interface-php&quot;&gt;&lt;a href=&quot;#公共接口-i-DAo-interface-php&quot; class=&quot;headerlink&quot; title=&quot;公共接口 i_DAo.interface.php&quot;&gt;&lt;/a&gt;公共接口 i_DAo.interface.php&lt;/h2&gt;&lt;p&gt;限制两个数据对象应该具有相同的方法。代码如下:&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * Created by PhpStorm.
 * User: jiangbo
 * Date: 2016/1/24
 * Time: 1:05
 * 与mysql接口一致(模型层调用一致)，利用interface
 */
interface i_DAO{
    //获取与前DAO的接口
    public static function getInstance($config = array());
    //执行sql的方法
    public function query($sql = &amp;apos;&amp;apos;);
    //获取全部数据
    public function fetchAll($sql = &amp;apos;&amp;apos;);
    //获取一行数据
    public function fetchRow($sql = &amp;apos;&amp;apos;);
    //获取一个数据
    public function fetchOne($sql = &amp;apos;&amp;apos;);
    //转义sql，防止注入
    public function escapeString($str = &amp;apos;&amp;apos;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MySqlDB-class-php&quot;&gt;&lt;a href=&quot;#MySqlDB-class-php&quot; class=&quot;headerlink&quot; title=&quot;MySqlDB.class.php&quot;&gt;&lt;/a&gt;MySqlDB.class.php&lt;/h2&gt;&lt;p&gt;这个类是最传统的sqldb 类,依据公共接口,实现其方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * Created by PhpStorm.
 * User: jiangbo
 * Date: 2016/1/19
 * Time: 17:27
 * 单例化的mysql类：3私1公
 */
class MySqlDB implements i_DAO
{
    private $_host;
    private $_port;
    private $_user;
    private $_password;
    private $_charset;
    private $_dbname;
    private $_link;
    /**
     * MySqlDB constructor.
     * @param array $config
     */
    private function __construct($config = array())
    {
        $this-&amp;gt;_initServer($config);//初始化服务器信息
        $this-&amp;gt;_connectServer();//链接服务器
        $this-&amp;gt;_setCharset();//设置字符集编码
        $this-&amp;gt;_selectDB();//选择默认数据库
    }
    private function __clone()
    {
        echo &amp;quot;不能克隆该对象&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
        die();
    }
    private static $_instance;
    public static function getInstance($config = array())
    {
        if (!(static::$_instance instanceof static)) {
            static::$_instance = new static($config);
        }
        return static::$_instance;
    }
    private function _initServer($config)
    {
        $this-&amp;gt;_host = isset($config[&amp;apos;host&amp;apos;]) ? $config[&amp;apos;host&amp;apos;] : &amp;apos;localhost&amp;apos;;
        $this-&amp;gt;_port = isset($config[&amp;apos;port&amp;apos;]) ? $config[&amp;apos;port&amp;apos;] : &amp;apos;3306&amp;apos;;
        $this-&amp;gt;_user = isset($config[&amp;apos;user&amp;apos;]) ? $config[&amp;apos;user&amp;apos;] : &amp;apos;&amp;apos;;
        $this-&amp;gt;_password = $config[&amp;apos;password&amp;apos;];
        $this-&amp;gt;_charset = isset($config[&amp;apos;charset&amp;apos;]) ? $config[&amp;apos;charset&amp;apos;] : &amp;apos;UTF8&amp;apos;;
        $this-&amp;gt;_dbname = isset($config[&amp;apos;dbname&amp;apos;]) ? $config[&amp;apos;dbname&amp;apos;] : &amp;apos;test&amp;apos;;
    }
    private function _connectServer()
    {
        $connect_result = @mysql_connect(&amp;quot;$this-&amp;gt;_host:$this-&amp;gt;_port&amp;quot;, $this-&amp;gt;_user, $this-&amp;gt;_password);
        if ($connect_result) {
            $this-&amp;gt;_link = $connect_result;
        } else {
            echo &amp;apos;数据库连接失败，请确认服务器信息&amp;apos;;
            die();
        }
    }
    private function _setCharset()
    {
        $sql = &amp;quot;SET NAMES $this-&amp;gt;_charset&amp;quot;;
        $this-&amp;gt;query($sql);
    }
    private function _selectDB()
    {
        $sql = &amp;quot;USE `$this-&amp;gt;_dbname`&amp;quot;;
        $this-&amp;gt;query($sql);
    }
    /**
     * 执行SQL语句
     * @param string $sql
     * @return mixed 执行结果。查询类的SQL(select, show, desc),成功返回结果集资源，失败返回false。非查询类(insert, delete, update)，成功返回true，失败返回false.
     */
    public function query($sql)
    {
        $query_result = @mysql_query($sql, $this-&amp;gt;_link);
        if (false == $query_result) {
            echo &amp;quot;SQL执行失败:&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
            echo &amp;quot;错误的SQL:&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, $sql, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
            echo &amp;quot;错误的消息为:&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, mysql_errno($this-&amp;gt;_link), &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
            die();
        } else {
            return $query_result;
        }
    }
    /**
     * @param string $sql 通常为:select * from ...
     * @return array
     */
    public function fetchRow($sql)
    {
        $result = $this-&amp;gt;query($sql);
        $row = @mysql_fetch_assoc($result);
        @mysql_free_result($result);
        return $row;
    }
    /**
     * @param string $sql 通常为:select count(*) from ...
     * @return string 如果没有值就返回NULL
     */
    public function fetchOne($sql)
    {
        $result = $this-&amp;gt;query($sql);
        $row = @mysql_fetch_row($result);
        @mysql_free_result($result);
        if ($row)
            return $row[0];
        else
            return NULL;
    }
    /**
     * @param string $sql 通常为:select * from ... where ..like &amp;apos;han%&amp;apos;
     * @return array
     */
    public function fetchAll($sql)
    {
        $result = $this-&amp;gt;query($sql);
        $rows = array();
        while ($row = @mysql_fetch_assoc($result))
            $rows[] = $row;
        @mysql_free_result($result);
        return $rows;
    }
    /*
     * 关闭当前数据库连接, 一般无需使用. 连接会随php脚本结束自动关闭
     */
    /*public function close()
    {
        return @mysql_close($this-&amp;gt;_link);
    }*/
    /**
     * 防止sql注入：转义字符串，在模型中使用
     * @param string $str 带转义的字符串
     * @return string 带引号包裹的转义后的字符串
     */
    public function escapeString($str = &amp;apos;&amp;apos;)
    {
        return &amp;quot;&amp;apos;&amp;quot; . mysql_real_escape_string($str, $this-&amp;gt;_link) . &amp;quot;&amp;apos;&amp;quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;PDODB-class-php&quot;&gt;&lt;a href=&quot;#PDODB-class-php&quot; class=&quot;headerlink&quot; title=&quot;PDODB.class.php&quot;&gt;&lt;/a&gt;PDODB.class.php&lt;/h2&gt;&lt;p&gt;为了实现数据对象随意切换,pdo的也需实现应该满足公共接口。代码如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * Created by PhpStorm.
 * User: jiangbo
 * Date: 2016/1/24
 * Time: 1:00
 * dao层使用dao扩展封装实现
 */
class PDODB implements i_DAO
{
    private $_host;
    private $_port;
    private $_user;
    private $_password;
    private $_charset;
    private $_dbname;
    private $_dsn;
    private $_option;
    private $_pdo;
    /**
     * PDODB constructor.
     * @param array $config
     */
    private function __construct($config = array())
    {
        $this-&amp;gt;_initServer($config);
        $this-&amp;gt;_newPDO();
    }
    private function _initServer($config)
    {
        $this-&amp;gt;_host = isset($config[&amp;apos;host&amp;apos;]) ? $config[&amp;apos;host&amp;apos;] : &amp;apos;localhost&amp;apos;;
        $this-&amp;gt;_port = isset($config[&amp;apos;port&amp;apos;]) ? $config[&amp;apos;port&amp;apos;] : &amp;apos;3306&amp;apos;;
        $this-&amp;gt;_user = isset($config[&amp;apos;user&amp;apos;]) ? $config[&amp;apos;user&amp;apos;] : &amp;apos;&amp;apos;;
        $this-&amp;gt;_password = $config[&amp;apos;password&amp;apos;];
        $this-&amp;gt;_charset = isset($config[&amp;apos;charset&amp;apos;]) ? $config[&amp;apos;charset&amp;apos;] : &amp;apos;UTF8&amp;apos;;
        $this-&amp;gt;_dbname = isset($config[&amp;apos;dbname&amp;apos;]) ? $config[&amp;apos;dbname&amp;apos;] : &amp;apos;test&amp;apos;;
    }
    private function _newPDO()
    {
        //设置参数
        $this-&amp;gt;_setDSN();//设置数据源参数
        $this-&amp;gt;_setOption();//设置选项
        $this-&amp;gt;_getPDO();//得到PDO对象
    }
    private function _setDSN()
    {
        $this-&amp;gt;_dsn = &amp;quot;mysql:host=$this-&amp;gt;_host;port=$this-&amp;gt;_port;dbname=$this-&amp;gt;_dbname&amp;quot;;
    }
    private function _setOption()
    {
        $this-&amp;gt;_option = array(
            PDO::MYSQL_ATTR_INIT_COMMAND =&amp;gt; &amp;quot;set names $this-&amp;gt;_charset&amp;quot;
        );
    }
    private function _getPDO()
    {
        $this-&amp;gt;_pdo = new PDO($this-&amp;gt;_dsn, $this-&amp;gt;_user, $this-&amp;gt;_password, $this-&amp;gt;_option);
    }
    private function __clone()
    {
        echo &amp;quot;不能克隆该对象&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
        die();
    }
    private static $_instance;
    public static function getInstance($config = array())
    {
        if (!(static::$_instance instanceof static)) {
            static::$_instance = new static($config);
        }
        return static::$_instance;
    }
    //执行方法，适用的场景
    private static $_queryStr = array(
        &amp;quot;select&amp;quot;,
        &amp;quot;show&amp;quot;,
        &amp;quot;desc&amp;quot;
    );
    public function query($sql = &amp;apos;&amp;apos;)
    {
        //使用正则过滤，分别使用query和exec
        foreach (static::$_queryStr as $str){
            if (preg_match(&amp;quot;/^\s*&amp;quot;.$str.&amp;quot;.*?/i&amp;quot;,$sql)){
                //查询类 返回结果集对象
                $result = $this-&amp;gt;_pdo-&amp;gt;query($sql);
            }else{
                //非查询类 返回bool
                $result = $this-&amp;gt;_pdo-&amp;gt;exec($sql) !== false;//有可能是0
            }
            //如果执行失败，报错
            if($result === false){
                $error_info = $this-&amp;gt;errorInfo();
                echo &amp;quot;SQL执行失败:&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
                echo &amp;quot;错误的SQL:&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, $sql, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
                echo &amp;quot;错误的消息为:&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;, $error_info[2], &amp;quot;&amp;lt;br&amp;gt;&amp;quot;;
                die();
            }else{
                return $result;
            }
            break;
        }
    }
    public function fetchAll($sql = &amp;apos;&amp;apos;)
    {
        $result = $this-&amp;gt;query($sql);
        $rows = $result-&amp;gt;fetchAll(PDO::FETCH_ASSOC);
        $result-&amp;gt;closeCursor();
        return $rows;
    }
    public function fetchRow($sql = &amp;apos;&amp;apos;)
    {
        $result = $this-&amp;gt;query($sql);
        $row = $result-&amp;gt;fetch(PDO::FETCH_ASSOC);
        $result-&amp;gt;closeCursor();
        return $row;
    }
    public function fetchOne($sql = &amp;apos;&amp;apos;)
    {
        $result = $this-&amp;gt;query($sql);
        $string = $result-&amp;gt;fetchColumn();
        $result-&amp;gt;closeCursor();
        return $string;
    }
    public function escapeString($str = &amp;apos;&amp;apos;)
    {
        return $this-&amp;gt;_pdo-&amp;gt;quote($str);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;模型层实例化数据对象-并达到随意切换&quot;&gt;&lt;a href=&quot;#模型层实例化数据对象-并达到随意切换&quot; class=&quot;headerlink&quot; title=&quot;模型层实例化数据对象,并达到随意切换&quot;&gt;&lt;/a&gt;模型层实例化数据对象,并达到随意切换&lt;/h2&gt;&lt;p&gt;实例化代码如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/**
 * Created by PhpStorm.
 * User: jiangbo
 * Date: 2016/1/19
 * Time: 1:02
 * 基础模型类
 */
class Model{
    /**
     * DAO : captcha access object
     */
    protected $_dao;//存储实例化好的数据库对象
    /**
     * Model constructor.
     */
    public function __construct()
    {
        $this-&amp;gt;_initDAO();//初始化基础模型
    }
    protected function _initDAO(){
        //require_once &amp;quot;./framework/MySqlDB.class.php&amp;quot;;
        $config = array(
            &amp;apos;host&amp;apos; =&amp;gt; &amp;apos;localhost&amp;apos;,
            &amp;apos;user&amp;apos; =&amp;gt; &amp;apos;root&amp;apos;,
            &amp;apos;password&amp;apos; =&amp;gt; &amp;apos;&amp;apos;,
            &amp;apos;dbname&amp;apos; =&amp;gt; &amp;apos;project&amp;apos;
        );
        //$this-&amp;gt;_dao = MySqlDB::getInstance($config);//调用mysqldb
        $this-&amp;gt;_dao = PDODB::getInstance($config);//调用pdo
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当然,代码还可以用一个公共配置文件来指定数据对象的类型和配置数据。&lt;/p&gt;
&lt;p&gt;好了,教程到此结束。如果您对此过程感到满意,你还可以继续看看我在&lt;a href=&quot;https://github.com/jarbob/MyPhpFramework/tree/JBPhpFramework&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gayhub&lt;/a&gt;开源的一个php框架,代码有详细的注释,并且入口文件没有做任何模块化配置文件,一边加深对php框架的学习印象。&lt;/p&gt;
</content:encoded>
      
      <comments>http://jarbob.com/2016/07/15/PHP-mysql-PDO-%E5%92%8Cmysql%E7%B1%BB%E7%9A%84%E5%B0%81%E8%A3%85/#disqus_thread</comments>
    </item>
    
    <item>
      <title>利用js模拟ping实现智能选择线路跳转网站</title>
      <link>http://jarbob.com/2016/07/10/%E5%88%A9%E7%94%A8js%E6%A8%A1%E6%8B%9Fping%E5%AE%9E%E7%8E%B0%E6%99%BA%E8%83%BD%E9%80%89%E6%8B%A9%E7%BA%BF%E8%B7%AF%E8%B7%B3%E8%BD%AC%E7%BD%91%E7%AB%99/</link>
      <guid>http://jarbob.com/2016/07/10/%E5%88%A9%E7%94%A8js%E6%A8%A1%E6%8B%9Fping%E5%AE%9E%E7%8E%B0%E6%99%BA%E8%83%BD%E9%80%89%E6%8B%A9%E7%BA%BF%E8%B7%AF%E8%B7%B3%E8%BD%AC%E7%BD%91%E7%AB%99/</guid>
      <pubDate>Sun, 10 Jul 2016 14:02:26 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;　　由于项目中用到js类似shell下的ping，而且前提是目标站服务器没有权限，我们不能配置其服务器允许跨域，所以这使得不能跨域的ajax失效，另外还要考虑到兼容性，一些h5下的技术如websocket也没法使用。&lt;/p&gt;
&lt;h2 id=&quot;尝试&quot;&gt;&lt;a href=&quot;#尝试&quot; class=&quot;headerlink&quot; title=&quot;尝试&quot;&gt;&lt;/a&gt;尝试&lt;/h2&gt;&lt;p&gt;　　既然要解决跨域，那么首先考虑到的图片ping。代码大概如下：&lt;br&gt;
      
      </description>
      
      <content:encoded>&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;　　由于项目中用到js类似shell下的ping，而且前提是目标站服务器没有权限，我们不能配置其服务器允许跨域，所以这使得不能跨域的ajax失效，另外还要考虑到兼容性，一些h5下的技术如websocket也没法使用。&lt;/p&gt;
&lt;h2 id=&quot;尝试&quot;&gt;&lt;a href=&quot;#尝试&quot; class=&quot;headerlink&quot; title=&quot;尝试&quot;&gt;&lt;/a&gt;尝试&lt;/h2&gt;&lt;p&gt;　　既然要解决跨域，那么首先考虑到的图片ping。代码大概如下：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;br&gt;var img = new Image();&lt;br&gt;var start = new Date();&lt;br&gt;var t = 0;&lt;br&gt;img.onload = img.onerror = pingCheck;&lt;br&gt;function pingCheck() {&lt;br&gt;    t = new Date() - start;&lt;br&gt; }&lt;br&gt;img.src = url + “/?” + (+new Date());&lt;br&gt;&lt;/pre&gt;&lt;br&gt;以上代码只是简单实现了图片ping的核心，另外还要写函数用来判断哪个url的时间短，并进行location。  但是上线正式测试之后，发现这个真是一团糟，如果目标站服务器挂了，或者client的网速不好时，整个页面将无限循环，于是你的js越写越复杂，定时器越写越多，用来排除各种错误。&lt;/p&gt;
&lt;p&gt;##探索&lt;br&gt;某天就在本屌正在怀疑人生的时候，突然发现有人提到&lt;font color=&quot;red&quot;&gt;如何防止网站被别人iframe调用&lt;/font&gt;，并提到在自己的网站加入以下js即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (self != top){
    top.location.href = self.location.href;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本屌顿时有点想法，因为目标站正好加了这个代码。  于是乎本人的新版iframe版代码就这样出现了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var Ping = function () {
 };

Ping.prototype.urlArr = new Array();
Ping.prototype.check = function (u) {

$(&amp;quot;&amp;lt;iframe style=&amp;apos;display: none&amp;apos; width=&amp;apos;1&amp;apos; height=&amp;apos;1&amp;apos; id=&amp;apos;PingFrame&amp;apos;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;quot;).appendTo(&amp;apos;body&amp;apos;);
$(&amp;quot;#PingFrame&amp;quot;).attr(&amp;quot;src&amp;quot;, u);

};

Ping.prototype.ping = function () {
var arr = this.urlArr;
for(var i =0; i &amp;lt; arr.length; i++){
    //console.log(arr[i]);
    this.check(&amp;quot;http://&amp;quot; + arr[i]);
}
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;好吧，这样就简简单单的实现咯~~~&lt;br&gt;好吧，详情请看&lt;a href=&quot;https://github.com/jarbob/JqueryPing.iframe.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
</content:encoded>
      
      <comments>http://jarbob.com/2016/07/10/%E5%88%A9%E7%94%A8js%E6%A8%A1%E6%8B%9Fping%E5%AE%9E%E7%8E%B0%E6%99%BA%E8%83%BD%E9%80%89%E6%8B%A9%E7%BA%BF%E8%B7%AF%E8%B7%B3%E8%BD%AC%E7%BD%91%E7%AB%99/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
